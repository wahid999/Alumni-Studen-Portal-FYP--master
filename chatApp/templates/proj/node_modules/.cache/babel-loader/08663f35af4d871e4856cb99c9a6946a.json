{"ast":null,"code":"import axios from\"axios\";import*as actionTypes from\"./actionTypes\";export var addMessage=function addMessage(message){return{type:actionTypes.ADD_MESSAGE,message:message};};export var setMessages=function setMessages(messages){return{type:actionTypes.SET_MESSAGES,messages:messages};};var getUserChatsSuccess=function getUserChatsSuccess(chats){return{type:actionTypes.GET_CHATS_SUCCESS,chats:chats};};export var getUserChats=function getUserChats(username,token){return function(dispatch){axios.defaults.headers={\"Content-Type\":\"application/json\",Authorization:\"Token \".concat(token)};axios.get(\"http://127.0.0.1:8000/chat/?username=\".concat(username)).then(function(res){return dispatch(getUserChatsSuccess(res.data));});};};","map":{"version":3,"sources":["E:/Uni/8th Sem/FYP/fyp/chatApp/templates/proj/src/store/actions/message.js"],"names":["axios","actionTypes","addMessage","message","type","ADD_MESSAGE","setMessages","messages","SET_MESSAGES","getUserChatsSuccess","chats","GET_CHATS_SUCCESS","getUserChats","username","token","dispatch","defaults","headers","Authorization","get","then","res","data"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,OAAO,CAAI,CACnC,MAAO,CACLC,IAAI,CAAEH,WAAW,CAACI,WADb,CAELF,OAAO,CAAEA,OAFJ,CAAP,CAID,CALM,CAOP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,QAAQ,CAAI,CACrC,MAAO,CACLH,IAAI,CAAEH,WAAW,CAACO,YADb,CAELD,QAAQ,CAAEA,QAFL,CAAP,CAID,CALM,CAOP,GAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,KAAK,CAAI,CACnC,MAAO,CACLN,IAAI,CAAEH,WAAW,CAACU,iBADb,CAELD,KAAK,CAAEA,KAFF,CAAP,CAID,CALD,CAOA,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAWC,KAAX,CAAqB,CAC/C,MAAO,UAAAC,QAAQ,CAAI,CACjBf,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAyB,CACvB,eAAgB,kBADO,CAEvBC,aAAa,iBAAWJ,KAAX,CAFU,CAAzB,CAIAd,KAAK,CACFmB,GADH,gDAC+CN,QAD/C,GAEGO,IAFH,CAEQ,SAAAC,GAAG,QAAIN,CAAAA,QAAQ,CAACN,mBAAmB,CAACY,GAAG,CAACC,IAAL,CAApB,CAAZ,EAFX,EAGD,CARD,CASD,CAVM","sourcesContent":["import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addMessage = message => {\r\n  return {\r\n    type: actionTypes.ADD_MESSAGE,\r\n    message: message\r\n  };\r\n};\r\n\r\nexport const setMessages = messages => {\r\n  return {\r\n    type: actionTypes.SET_MESSAGES,\r\n    messages: messages\r\n  };\r\n};\r\n\r\nconst getUserChatsSuccess = chats => {\r\n  return {\r\n    type: actionTypes.GET_CHATS_SUCCESS,\r\n    chats: chats\r\n  };\r\n};\r\n\r\nexport const getUserChats = (username, token) => {\r\n  return dispatch => {\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/chat/?username=${username}`)\r\n      .then(res => dispatch(getUserChatsSuccess(res.data)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}