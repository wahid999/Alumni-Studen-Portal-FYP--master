{"ast":null,"code":"import _toConsumableArray from\"E:\\\\Uni\\\\8th Sem\\\\FYP\\\\fyp\\\\chatApp\\\\templates\\\\proj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"E:\\\\Uni\\\\8th Sem\\\\FYP\\\\fyp\\\\chatApp\\\\templates\\\\proj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\Uni\\\\8th Sem\\\\FYP\\\\fyp\\\\chatApp\\\\templates\\\\proj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\Uni\\\\8th Sem\\\\FYP\\\\fyp\\\\chatApp\\\\templates\\\\proj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\Uni\\\\8th Sem\\\\FYP\\\\fyp\\\\chatApp\\\\templates\\\\proj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{Form,Button,Select}from\"antd\";import axios from\"axios\";import{connect}from\"react-redux\";import{withRouter}from\"react-router-dom\";import*as navActions from\"../store/actions/nav\";import*as messageActions from\"../store/actions/message\";var FormItem=Form.Item;function hasErrors(fieldsError){return Object.keys(fieldsError).some(function(field){return fieldsError[field];});}var HorizontalAddChatForm=/*#__PURE__*/function(_React$Component){_inherits(HorizontalAddChatForm,_React$Component);var _super=_createSuper(HorizontalAddChatForm);function HorizontalAddChatForm(){var _this;_classCallCheck(this,HorizontalAddChatForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={usernames:[],error:null};_this.handleChange=function(value){_this.setState({usernames:value});};_this.handleSubmit=function(e){var usernames=_this.state.usernames;e.preventDefault();_this.props.form.validateFields(function(err,values){if(!err){var combined=[].concat(_toConsumableArray(usernames),[_this.props.username]);console.log(combined);axios.defaults.headers={\"Content-Type\":\"application/json\",Authorization:\"Token \".concat(_this.props.token)};var data=JSON.stringify({messages:[],participants:combined});// axios\n//   .post(\"http://127.0.0.1:8000/chat/create/\", {\n//     messages: [],\n//     participants: combined\n//   })\naxios.post('http://127.0.0.1:8000/chat/create/',data).then(function(res){_this.props.history.push(\"/\".concat(res.data.memebers_name));_this.props.closeAddChatPopup();_this.props.getUserChats(_this.props.username,_this.props.token);}).catch(function(err){// console.error(err);\n_this.setState({error:\"username doesn't exist.....! \"});});}});};return _this;}_createClass(HorizontalAddChatForm,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.form.validateFields();}},{key:\"render\",value:function render(){var _this$props$form=this.props.form,getFieldDecorator=_this$props$form.getFieldDecorator,getFieldsError=_this$props$form.getFieldsError,getFieldError=_this$props$form.getFieldError,isFieldTouched=_this$props$form.isFieldTouched;var userNameError=isFieldTouched(\"userName\")&&getFieldError(\"userName\");return/*#__PURE__*/React.createElement(Form,{layout:\"inline\",onSubmit:this.handleSubmit},this.state.error?\"\".concat(this.state.error):null,/*#__PURE__*/React.createElement(FormItem,{validateStatus:userNameError?\"error\":\"\",help:userNameError||\"\"},getFieldDecorator(\"userName\",{rules:[{required:true,message:\"Please input the username of the person you want to chat with\"}]})(/*#__PURE__*/React.createElement(Select,{mode:\"tags\",style:{width:\"100%\"},placeholder:\"Tags Mode\",onChange:this.handleChange},[]))),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",disabled:hasErrors(getFieldsError())},\"Start a chat\")));}}]);return HorizontalAddChatForm;}(React.Component);var AddChatForm=Form.create()(HorizontalAddChatForm);var mapStateToProps=function mapStateToProps(state){return{token:state.auth.token,username:state.auth.username};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{closeAddChatPopup:function closeAddChatPopup(){return dispatch(navActions.closeAddChatPopup());},getUserChats:function getUserChats(username,token){return dispatch(messageActions.getUserChats(username,token));}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(AddChatForm));","map":{"version":3,"sources":["E:/Uni/8th Sem/FYP/fyp/chatApp/templates/proj/src/containers/Form.js"],"names":["React","Form","Button","Select","axios","connect","withRouter","navActions","messageActions","FormItem","Item","hasErrors","fieldsError","Object","keys","some","field","HorizontalAddChatForm","state","usernames","error","handleChange","value","setState","handleSubmit","e","preventDefault","props","form","validateFields","err","values","combined","username","console","log","defaults","headers","Authorization","token","data","JSON","stringify","messages","participants","post","then","res","history","push","memebers_name","closeAddChatPopup","getUserChats","catch","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","rules","required","message","width","Component","AddChatForm","create","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"w2BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,MAAvB,KAAqC,MAArC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,GAAKC,CAAAA,UAAZ,KAA4B,sBAA5B,CACA,MAAO,GAAKC,CAAAA,cAAZ,KAAgC,0BAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAGR,IAAI,CAACS,IAAtB,CAEA,QAASC,CAAAA,SAAT,CAAmBC,WAAnB,CAAgC,CAC9B,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBG,IAAzB,CAA8B,SAAAC,KAAK,QAAIJ,CAAAA,WAAW,CAACI,KAAD,CAAf,EAAnC,CAAP,CACD,C,GAEKC,CAAAA,qB,mYACJC,K,CAAQ,CACNC,SAAS,CAAE,EADL,CAENC,KAAK,CAAE,IAFD,C,OAKRC,Y,CAAe,SAAAC,KAAK,CAAI,CACtB,MAAKC,QAAL,CAAc,CACZJ,SAAS,CAAEG,KADC,CAAd,EAGD,C,OAMDE,Y,CAAe,SAAAC,CAAC,CAAI,IAEVN,CAAAA,SAFU,CAEI,MAAKD,KAFT,CAEVC,SAFU,CAGlBM,CAAC,CAACC,cAAF,GACA,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,SAACC,GAAD,CAAMC,MAAN,CAAiB,CAC9C,GAAI,CAACD,GAAL,CAAU,CACR,GAAME,CAAAA,QAAQ,8BAAOb,SAAP,GAAkB,MAAKQ,KAAL,CAAWM,QAA7B,EAAd,CACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EACA5B,KAAK,CAACgC,QAAN,CAAeC,OAAf,CAAyB,CACvB,eAAgB,kBADO,CAEvBC,aAAa,iBAAW,MAAKX,KAAL,CAAWY,KAAtB,CAFU,CAAzB,CAIA,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAe,CACxBC,QAAQ,CAAE,EADc,CAExBC,YAAY,CAAEZ,QAFU,CAAf,CAAX,CAIA;AACA;AACA;AACA;AACA;AACE5B,KAAK,CAACyC,IAAN,CAAW,oCAAX,CAAgDL,IAAhD,EACCM,IADD,CACM,SAAAC,GAAG,CAAI,CACX,MAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,YAA4BF,GAAG,CAACP,IAAJ,CAASU,aAArC,GACA,MAAKvB,KAAL,CAAWwB,iBAAX,GACA,MAAKxB,KAAL,CAAWyB,YAAX,CAAwB,MAAKzB,KAAL,CAAWM,QAAnC,CAA6C,MAAKN,KAAL,CAAWY,KAAxD,EACD,CALD,EAMCc,KAND,CAMO,SAAAvB,GAAG,CAAI,CACZ;AACA,MAAKP,QAAL,CAAc,CACZH,KAAK,CAAE,+BADK,CAAd,EAGD,CAXD,EAYH,CACF,CA9BD,EA+BD,C,8GAvCmB,CAClB,KAAKO,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,GACD,C,uCAuCQ,sBAMH,KAAKF,KAAL,CAAWC,IANR,CAEL0B,iBAFK,kBAELA,iBAFK,CAGLC,cAHK,kBAGLA,cAHK,CAILC,aAJK,kBAILA,aAJK,CAKLC,cALK,kBAKLA,cALK,CAQP,GAAMC,CAAAA,aAAa,CACjBD,cAAc,CAAC,UAAD,CAAd,EAA8BD,aAAa,CAAC,UAAD,CAD7C,CAEA,mBACE,oBAAC,IAAD,EAAM,MAAM,CAAC,QAAb,CAAsB,QAAQ,CAAE,KAAKhC,YAArC,EACG,KAAKN,KAAL,CAAWE,KAAX,WAAsB,KAAKF,KAAL,CAAWE,KAAjC,EAA2C,IAD9C,cAEE,oBAAC,QAAD,EACE,cAAc,CAAEsC,aAAa,CAAG,OAAH,CAAa,EAD5C,CAEE,IAAI,CAAEA,aAAa,EAAI,EAFzB,EAIGJ,iBAAiB,CAAC,UAAD,CAAa,CAC7BK,KAAK,CAAE,CACL,CACEC,QAAQ,CAAE,IADZ,CAEEC,OAAO,CACL,+DAHJ,CADK,CADsB,CAAb,CAAjB,cASC,oBAAC,MAAD,EACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAFT,CAGE,WAAW,CAAC,WAHd,CAIE,QAAQ,CAAE,KAAKzC,YAJjB,EAMG,EANH,CATD,CAJH,CAFF,cAyBE,oBAAC,QAAD,mBACE,oBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAEE,QAAQ,CAAC,QAFX,CAGE,QAAQ,CAAEV,SAAS,CAAC4C,cAAc,EAAf,CAHrB,iBADF,CAzBF,CADF,CAqCD,C,mCApGiCvD,KAAK,CAAC+D,S,EAuG1C,GAAMC,CAAAA,WAAW,CAAG/D,IAAI,CAACgE,MAAL,GAAchD,qBAAd,CAApB,CAEA,GAAMiD,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAhD,KAAK,CAAI,CAC/B,MAAO,CACLqB,KAAK,CAAErB,KAAK,CAACiD,IAAN,CAAW5B,KADb,CAELN,QAAQ,CAAEf,KAAK,CAACiD,IAAN,CAAWlC,QAFhB,CAAP,CAID,CALD,CAOA,GAAMmC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACrC,MAAO,CACLlB,iBAAiB,CAAE,mCAAMkB,CAAAA,QAAQ,CAAC9D,UAAU,CAAC4C,iBAAX,EAAD,CAAd,EADd,CAELC,YAAY,CAAE,sBAACnB,QAAD,CAAWM,KAAX,QACZ8B,CAAAA,QAAQ,CAAC7D,cAAc,CAAC4C,YAAf,CAA4BnB,QAA5B,CAAsCM,KAAtC,CAAD,CADI,EAFT,CAAP,CAKD,CAND,CAQA,cAAejC,CAAAA,UAAU,CACvBD,OAAO,CACL6D,eADK,CAELE,kBAFK,CAAP,CAGEJ,WAHF,CADuB,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { Form, Button, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as navActions from \"../store/actions/nav\";\r\nimport * as messageActions from \"../store/actions/message\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass HorizontalAddChatForm extends React.Component {\r\n  state = {\r\n    usernames: [],\r\n    error: null\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({\r\n      usernames: value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.form.validateFields();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n\r\n    const { usernames } = this.state;\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const combined = [...usernames, this.props.username];\r\n        console.log(combined);\r\n        axios.defaults.headers = {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Token ${this.props.token}`\r\n        };\r\n        let data = JSON.stringify({\r\n          messages: [],\r\n          participants: combined\r\n        });\r\n        // axios\r\n        //   .post(\"http://127.0.0.1:8000/chat/create/\", {\r\n        //     messages: [],\r\n        //     participants: combined\r\n        //   })\r\n          axios.post('http://127.0.0.1:8000/chat/create/',data)\r\n          .then(res => {\r\n            this.props.history.push(`/${res.data.memebers_name}`);\r\n            this.props.closeAddChatPopup();\r\n            this.props.getUserChats(this.props.username, this.props.token);\r\n          })\r\n          .catch(err => {\r\n            // console.error(err);\r\n            this.setState({\r\n              error: \"username doesn't exist.....! \"\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched\r\n    } = this.props.form;\r\n\r\n    const userNameError =\r\n      isFieldTouched(\"userName\") && getFieldError(\"userName\");\r\n    return (\r\n      <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n        {this.state.error ? `${this.state.error}` : null}\r\n        <FormItem\r\n          validateStatus={userNameError ? \"error\" : \"\"}\r\n          help={userNameError || \"\"}\r\n        >\r\n          {getFieldDecorator(\"userName\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message:\r\n                  \"Please input the username of the person you want to chat with\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select\r\n              mode=\"tags\"\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Tags Mode\"\r\n              onChange={this.handleChange}\r\n            >\r\n              {[]}\r\n            </Select>\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            disabled={hasErrors(getFieldsError())}\r\n          >\r\n            Start a chat\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst AddChatForm = Form.create()(HorizontalAddChatForm);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    username: state.auth.username\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\r\n    getUserChats: (username, token) =>\r\n      dispatch(messageActions.getUserChats(username, token))\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(AddChatForm)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}