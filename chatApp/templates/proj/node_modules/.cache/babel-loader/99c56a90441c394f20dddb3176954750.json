{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\For Merging Chat-App\\\\proj\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport AddChatModal from \"./containers/Popup\";\nimport * as actions from \"./store/actions/auth\";\nimport * as navActions from \"./store/actions/nav\";\nimport * as messageActions from \"./store/actions/message\";\nimport WebSocketInstance from \"./websocket\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n\n    this.getImage = () => {\n      // var url={}\n      fetch(`http://localhost:8000/chat/profile/aamirasdfj`).then(res => console.log(res));\n    };\n\n    WebSocketInstance.addCallbacks(this.props.setMessages.bind(this), this.props.addMessage.bind(this));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        value: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, this.state.value), this.getImage());\n  }\n\n} //   render() {\n//     return (\n//       <Router>\n//         <div id=\"frame\">\n//           <Sidepanel />\n//           <div className=\"content\">\n//             <AddChatModal\n//               isVisible={this.props.showAddChatPopup}\n//               close={() => this.props.closeAddChatPopup()}\n//             />\n//             <BaseRouter />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages)),\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/Programming/React/For Merging Chat-App/proj/src/App.js"],"names":["React","connect","BrowserRouter","Router","BaseRouter","Sidepanel","Profile","AddChatModal","actions","navActions","messageActions","WebSocketInstance","App","Component","componentDidMount","props","onTryAutoSignup","constructor","state","value","getImage","fetch","then","res","console","log","addCallbacks","setMessages","bind","addMessage","render","e","setState","target","mapStateToProps","showAddChatPopup","nav","authenticated","auth","token","chats","message","mapDispatchToProps","dispatch","authCheckState","closeAddChatPopup","messages","getUserChats","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport AddChatModal from \"./containers/Popup\";\nimport * as actions from \"./store/actions/auth\";\nimport * as navActions from \"./store/actions/nav\";\nimport * as messageActions from \"./store/actions/message\";\nimport WebSocketInstance from \"./websocket\";\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(\n      this.props.setMessages.bind(this),\n      this.props.addMessage.bind(this)\n    );\n  }\n  state={\n    value: ''\n  }\n  getImage = () => {\n\n    // var url={}\n    fetch(`http://localhost:8000/chat/profile/aamirasdfj`)\n      .then(res =>console.log(res))\n  }\n  render(){\n    return (\n      <div>\n\n        <input type='text' onChange={(e) => this.setState({ value: e.target.value })} />\n        <p>{this.state.value}</p>\n        {this.getImage()}\n      </div>\n    )\n  }\n}\n//   render() {\n//     return (\n//       <Router>\n//         <div id=\"frame\">\n//           <Sidepanel />\n//           <div className=\"content\">\n//             <AddChatModal\n//               isVisible={this.props.showAddChatPopup}\n//               close={() => this.props.closeAddChatPopup()}\n//             />\n\n//             <BaseRouter />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n\nconst mapStateToProps = state => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token,\n    chats: state.message.chats,\n  };\n};\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages)),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}