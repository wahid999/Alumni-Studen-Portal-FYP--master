{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\For Merging Chat-App\\\\proj\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport AddChatModal from \"./containers/Popup\";\nimport * as actions from \"./store/actions/auth\";\nimport * as navActions from \"./store/actions/nav\";\nimport * as messageActions from \"./store/actions/message\";\nimport WebSocketInstance from \"./websocket\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    WebSocketInstance.addCallbacks(this.props.setMessages.bind(this), this.props.addMessage.bind(this));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"100\",\n      height: \"100\",\n      src: this.state.value,\n      alt: \"image not found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), this.getImage());\n  }\n\n} //   render() {\n//     return (\n//       <Router>\n//         <div id=\"frame\">\n//           <Sidepanel />\n//           <div className=\"content\">\n//             <AddChatModal\n//               isVisible={this.props.showAddChatPopup}\n//               close={() => this.props.closeAddChatPopup()}\n//             />\n//             <BaseRouter />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages)),\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/Programming/React/For Merging Chat-App/proj/src/App.js"],"names":["React","connect","BrowserRouter","Router","BaseRouter","Sidepanel","Profile","AddChatModal","actions","navActions","messageActions","WebSocketInstance","App","Component","componentDidMount","props","onTryAutoSignup","constructor","state","value","addCallbacks","setMessages","bind","addMessage","render","getImage","mapStateToProps","showAddChatPopup","nav","authenticated","auth","token","chats","message","mapDispatchToProps","dispatch","authCheckState","closeAddChatPopup","messages","getUserChats","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,sBAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,qBAA5B;AACA,OAAO,KAAKC,cAAZ,MAAgC,yBAAhC;AACA,OAAOC,iBAAP,MAA8B,aAA9B;;AACA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,eAAX;AACD;;AAEDC,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBG,KAPmB,GAOb;AACJC,MAAAA,KAAK,EAAE;AADH,KAPa;AAEjBR,IAAAA,iBAAiB,CAACS,YAAlB,CACE,KAAKL,KAAL,CAAWM,WAAX,CAAuBC,IAAvB,CAA4B,IAA5B,CADF,EAEE,KAAKP,KAAL,CAAWQ,UAAX,CAAsBD,IAAtB,CAA2B,IAA3B,CAFF;AAID;;AAKDE,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,MAAM,EAAC,KAAxB;AAA8B,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,KAA9C;AAAqD,MAAA,GAAG,EAAC,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKM,QAAL,EAHH,CADF;AAQD;;AAzB+B,C,CA2BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAGR,KAAK,IAAI;AAC/B,SAAO;AACLS,IAAAA,gBAAgB,EAAET,KAAK,CAACU,GAAN,CAAUD,gBADvB;AAELE,IAAAA,aAAa,EAAEX,KAAK,CAACY,IAAN,CAAWC,KAFrB;AAGLC,IAAAA,KAAK,EAAEd,KAAK,CAACe,OAAN,CAAcD;AAHhB,GAAP;AAKD,CAND;;AAUA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,eAAe,EAAE,MAAMmB,QAAQ,CAAC3B,OAAO,CAAC4B,cAAR,EAAD,CAD1B;AAELC,IAAAA,iBAAiB,EAAE,MAAMF,QAAQ,CAAC1B,UAAU,CAAC4B,iBAAX,EAAD,CAF5B;AAGLd,IAAAA,UAAU,EAAEU,OAAO,IAAIE,QAAQ,CAACzB,cAAc,CAACa,UAAf,CAA0BU,OAA1B,CAAD,CAH1B;AAILZ,IAAAA,WAAW,EAAEiB,QAAQ,IAAIH,QAAQ,CAACzB,cAAc,CAACW,WAAf,CAA2BiB,QAA3B,CAAD,CAJ5B;AAKLC,IAAAA,YAAY,EAAE,CAACC,QAAD,EAAWT,KAAX,KACZI,QAAQ,CAACzB,cAAc,CAAC6B,YAAf,CAA4BC,QAA5B,EAAsCT,KAAtC,CAAD;AANL,GAAP;AAQD,CATD;;AAWA,eAAe9B,OAAO,CACpByB,eADoB,EAEpBQ,kBAFoB,CAAP,CAGbtB,GAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport AddChatModal from \"./containers/Popup\";\nimport * as actions from \"./store/actions/auth\";\nimport * as navActions from \"./store/actions/nav\";\nimport * as messageActions from \"./store/actions/message\";\nimport WebSocketInstance from \"./websocket\";\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(\n      this.props.setMessages.bind(this),\n      this.props.addMessage.bind(this)\n    );\n  }\n  state={\n    value: ''\n  }\n  \n  render(){\n    return (\n      <div>\n\n        <img width='100' height='100' src={this.state.value} alt='image not found' />\n        {this.getImage()}\n\n      </div>\n    )\n  }\n}\n//   render() {\n//     return (\n//       <Router>\n//         <div id=\"frame\">\n//           <Sidepanel />\n//           <div className=\"content\">\n//             <AddChatModal\n//               isVisible={this.props.showAddChatPopup}\n//               close={() => this.props.closeAddChatPopup()}\n//             />\n\n//             <BaseRouter />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n\nconst mapStateToProps = state => {\n  return {\n    showAddChatPopup: state.nav.showAddChatPopup,\n    authenticated: state.auth.token,\n    chats: state.message.chats,\n  };\n};\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages)),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}