{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\For Merging Chat-App\\\\proj\\\\src\\\\containers\\\\Chat.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport WebSocketInstance from \"../websocket\";\nimport Hoc from \"../hoc/hoc\";\nimport Profile from \"./Profile\";\nimport groupUser from './../assets/groupUser.png';\nimport singleUser from './../assets/singleUser.png';\nimport axios from \"axios\";\n\nclass Chat extends React.Component {\n  initialiseChat() {\n    this.waitForSocketConnection(() => {\n      // WebSocketInstance.addCallbacks(\n      //   this.props.setMessages.bind(this),\n      //   this.props.addMessage.bind(this)\n      // );\n      WebSocketInstance.fetchMessages(this.props.username, this.props.match.params.chatID);\n    });\n    WebSocketInstance.connect(this.props.match.params.chatID);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      value: ''\n    };\n\n    this.messageChangeHandler = event => {\n      this.setState({\n        message: event.target.value\n      });\n    };\n\n    this.sendMessageHandler = e => {\n      e.preventDefault();\n      const messageObject = {\n        from: this.props.username,\n        content: this.state.message,\n        chatId: this.props.match.params.chatID\n      };\n      WebSocketInstance.newChatMessage(messageObject);\n      this.setState({\n        message: \"\"\n      });\n    };\n\n    this.renderTimestamp = timestamp => {\n      let prefix = \"\";\n      const timeDiff = Math.round((new Date().getTime() - new Date(timestamp).getTime()) / 60000);\n\n      if (timeDiff < 1) {\n        // less than one minute ago\n        prefix = \"just now...\";\n      } else if (timeDiff < 60 && timeDiff > 1) {\n        // less than sixty minutes ago\n        prefix = `${timeDiff} minutes ago`;\n      } else if (timeDiff < 24 * 60 && timeDiff > 60) {\n        // less than 24 hours ago\n        prefix = `${Math.round(timeDiff / 60)} hours ago`;\n      } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\n        // less than 7 days ago\n        prefix = `${Math.round(timeDiff / (60 * 24))} days ago`;\n      } else {}\n\n      return prefix;\n    };\n\n    this.getUserName = name => {\n      var index = name.lastIndexOf('@');\n      name = name.substr(0, index) + '    @' + name.substr(index + 1);\n      return name;\n    };\n\n    this.renderMessages = messages => {\n      const currentUser = this.props.username;\n      return messages.map((message, i, arr) => /*#__PURE__*/React.createElement(\"li\", {\n        key: message.id,\n        style: {\n          marginBottom: arr.length - 1 === i ? \"300px\" : \"15px\"\n        },\n        className: message.author === currentUser ? \"sent\" : \"replies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, this.getUserName(message.content), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, this.renderTimestamp(message.timestamp)))));\n    };\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.replaceAll = (string, search, replace) => {\n      return string.split(search).join(replace);\n    };\n\n    this.getImageURL = name => {\n      var url = '';\n      var token = localStorage.getItem('token');\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`\n      };\n      axios.get(`http://127.0.0.1:8000/chat/profile/${name}`).then(res => res.data).then(res => {\n        console.log();\n        this.setState({\n          value: res[0].photo_url\n        }); // url = res[0].photo_url\n      }).catch();\n      return this.state.value;\n    };\n\n    this.getImage = () => {\n      var itemNO = this.props.match.params.chatID.split('_').length;\n      var name = this.props.match.params.chatID;\n      name = this.replaceAll(name, '_', ' ');\n      var username = localStorage.getItem('username');\n\n      if (username !== null & username !== undefined) {\n        username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1);\n      }\n\n      if (itemNO <= 2) {\n        name = name.replace(username, '');\n        name = this.replaceAll(name, ' ', '');\n        name = name.toLowerCase();\n        name = this.getImageURL(name);\n      } else {\n        name = groupUser;\n      }\n\n      if (name === undefined) {\n        name = singleUser;\n      }\n\n      return name;\n    };\n\n    this.initialiseChat();\n  }\n\n  waitForSocketConnection(callback) {\n    const component = this;\n    setTimeout(function () {\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\");\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\");\n        component.waitForSocketConnection(callback);\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n      WebSocketInstance.disconnect();\n      this.waitForSocketConnection(() => {\n        WebSocketInstance.fetchMessages(this.props.username, newProps.match.params.chatID);\n      });\n      WebSocketInstance.connect(newProps.match.params.chatID);\n    }\n  }\n\n  render() {\n    const messages = this.state.messages;\n    return /*#__PURE__*/React.createElement(Hoc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Profile, {\n      id: this.props.match.params.chatID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }), console.log(this.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"chat-log\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, this.props.messages && this.renderMessages(this.props.messages), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        clear: \"both\"\n      },\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.sendMessageHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.messageChangeHandler,\n      value: this.state.message,\n      required: true,\n      id: \"chat-message-input\",\n      type: \"text\",\n      placeholder: \"Write your message...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: '90px',\n        paddingTop: '20px'\n      },\n      id: \"chat-message-submit\",\n      className: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-paper-plane\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.username,\n    messages: state.message.messages\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);","map":{"version":3,"sources":["E:/Programming/React/For Merging Chat-App/proj/src/containers/Chat.js"],"names":["React","connect","WebSocketInstance","Hoc","Profile","groupUser","singleUser","axios","Chat","Component","initialiseChat","waitForSocketConnection","fetchMessages","props","username","match","params","chatID","constructor","state","message","value","messageChangeHandler","event","setState","target","sendMessageHandler","e","preventDefault","messageObject","from","content","chatId","newChatMessage","renderTimestamp","timestamp","prefix","timeDiff","Math","round","Date","getTime","getUserName","name","index","lastIndexOf","substr","renderMessages","messages","currentUser","map","i","arr","id","marginBottom","length","author","scrollToBottom","messagesEnd","scrollIntoView","behavior","replaceAll","string","search","replace","split","join","getImageURL","url","token","localStorage","getItem","defaults","headers","Authorization","get","then","res","data","console","log","photo_url","catch","getImage","itemNO","undefined","charAt","toUpperCase","slice","toLowerCase","callback","component","setTimeout","componentDidMount","componentDidUpdate","componentWillReceiveProps","newProps","disconnect","render","float","clear","el","width","paddingTop","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WebSocketInstance from \"../websocket\";\r\nimport Hoc from \"../hoc/hoc\";\r\nimport Profile from \"./Profile\";\r\nimport groupUser from './../assets/groupUser.png'\r\nimport singleUser from './../assets/singleUser.png'\r\nimport axios from \"axios\";\r\n\r\nclass Chat extends React.Component {\r\n  state = {\r\n    message: \"\",\r\n    value:''\r\n  };\r\n\r\n  initialiseChat() {\r\n    this.waitForSocketConnection(() => {\r\n      // WebSocketInstance.addCallbacks(\r\n      //   this.props.setMessages.bind(this),\r\n      //   this.props.addMessage.bind(this)\r\n      // );\r\n      WebSocketInstance.fetchMessages(\r\n        this.props.username,\r\n        this.props.match.params.chatID\r\n      );\r\n    });\r\n    WebSocketInstance.connect(this.props.match.params.chatID);\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialiseChat();\r\n  }\r\n\r\n  waitForSocketConnection(callback) {\r\n    const component = this;\r\n    setTimeout(function() {\r\n      if (WebSocketInstance.state() === 1) {\r\n        console.log(\"Connection is made\");\r\n        callback();\r\n        return;\r\n      } else {\r\n        console.log(\"wait for connection...\");\r\n        component.waitForSocketConnection(callback);\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  messageChangeHandler = event => {\r\n    this.setState({ message: event.target.value});\r\n  };\r\n\r\n  sendMessageHandler = e => {\r\n    e.preventDefault();\r\n    const messageObject = {\r\n      from: this.props.username,\r\n      content: this.state.message,\r\n      chatId: this.props.match.params.chatID\r\n    };\r\n    WebSocketInstance.newChatMessage(messageObject);\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  renderTimestamp = timestamp => {\r\n    let prefix = \"\";\r\n    const timeDiff = Math.round(\r\n      (new Date().getTime() - new Date(timestamp).getTime()) / 60000\r\n    );\r\n    if (timeDiff < 1) {\r\n      // less than one minute ago\r\n      prefix = \"just now...\";\r\n    } else if (timeDiff < 60 && timeDiff > 1) {\r\n      // less than sixty minutes ago\r\n      prefix = `${timeDiff} minutes ago`;\r\n    } else if (timeDiff < 24 * 60 && timeDiff > 60) {\r\n      // less than 24 hours ago\r\n      prefix = `${Math.round(timeDiff / 60)} hours ago`;\r\n    } else if (timeDiff < 31 * 24 * 60 && timeDiff > 24 * 60) {\r\n      // less than 7 days ago\r\n      prefix = `${Math.round(timeDiff / (60 * 24))} days ago`;\r\n    } else {\r\n\r\n    }\r\n    return prefix;\r\n  };\r\n\r\n  getUserName = (name) => {\r\n    var index = name.lastIndexOf('@')\r\n    name = name.substr(0, index) + '    @' + name.substr(index + 1);\r\n  \r\n    return name\r\n  }\r\n  renderMessages = messages => {\r\n    const currentUser = this.props.username;\r\n    return messages.map((message, i, arr) => (\r\n      <li\r\n        key={message.id}\r\n        style={{ marginBottom: arr.length - 1 === i ? \"300px\" : \"15px\" }}\r\n        className={message.author === currentUser ? \"sent\" : \"replies\"}\r\n      >\r\n        <p>\r\n        {this.getUserName(message.content)}\r\n          <br />\r\n          <small>{this.renderTimestamp(message.timestamp)}</small>\r\n        </p>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\r\n      WebSocketInstance.disconnect();\r\n      this.waitForSocketConnection(() => {\r\n        WebSocketInstance.fetchMessages(\r\n          this.props.username,\r\n          newProps.match.params.chatID\r\n        );\r\n      }); \r\n      WebSocketInstance.connect(newProps.match.params.chatID);\r\n    }\r\n  }\r\n\r\n  replaceAll=(string, search, replace)=> {\r\n    return string.split(search).join(replace);\r\n  }\r\n\r\n  getImageURL = (name) => {\r\n    var url=''\r\n    var token = localStorage.getItem('token')\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/chat/profile/${name}`)\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        console.log()\r\n        this.setState({value:res[0].photo_url})\r\n        // url = res[0].photo_url\r\n      })\r\n      .catch() \r\n \r\n      return this.state.value\r\n    \r\n  }\r\n\r\n\r\n\r\n  getImage = () =>\r\n  {   \r\n    var itemNO = this.props.match.params.chatID.split('_').length\r\n    var name = this.props.match.params.chatID\r\n    name = this.replaceAll(name, '_', ' ')\r\n    var username = localStorage.getItem('username')\r\n    if (username !== null & username !== undefined)\r\n    {\r\n      username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1)  \r\n    }\r\n    if (itemNO <= 2)\r\n    {\r\n      name = name.replace(username, '')\r\n      name = this.replaceAll(name,' ', '')\r\n      name = name.toLowerCase()\r\n      name=this.getImageURL(name) \r\n    }\r\n    else {\r\n      name=groupUser\r\n    }\r\n    if (name === undefined)\r\n    {\r\n      name = singleUser  \r\n    }\r\n    \r\n    return name\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const messages = this.state.messages;\r\n    return (\r\n\r\n      <Hoc>\r\n        <Profile id={this.props.match.params.chatID} />\r\n         {console.log(this.message)}\r\n        <div className=\"messages\">\r\n          <ul id=\"chat-log\">\r\n            {this.props.messages && this.renderMessages(this.props.messages)}\r\n            <div\r\n              style={{ float: \"left\", clear: \"both\" }}\r\n              ref={el => {\r\n                this.messagesEnd = el;\r\n              }}\r\n            />\r\n          </ul>\r\n        </div>\r\n        <div className=\"message-input\">\r\n          <form onSubmit={this.sendMessageHandler}>\r\n            <div className=\"wrap\">\r\n              <input\r\n                onChange={this.messageChangeHandler}\r\n                value={this.state.message}\r\n                required\r\n                id=\"chat-message-input\"\r\n                type=\"text\"\r\n                placeholder=\"Write your message...\"\r\n              />\r\n               {/* <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\" /> */}\r\n              <button style={{width:'90px',paddingTop:'20px'}} id=\"chat-message-submit\" className=\"submit\">\r\n                <i className=\"fa fa-paper-plane\" aria-hidden=\"true\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Hoc>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username,\r\n    messages: state.message.messages,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}