{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\For Merging Chat-App\\\\proj\\\\src\\\\Try.js\";\nimport React, { Component } from 'react';\nimport { createStore } from \"redux\";\nexport class Try extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.reducer = (state = {}, action) => {\n      if (action.type === 'IMAGE') {\n        return this.action.data;\n      }\n\n      return state;\n    };\n\n    this.componentWillMount = () => {\n      var store = createStore(this.reducer); // export default store\n\n      this.getImage(store);\n      console.log(store.getState());\n    };\n\n    this.getImage = store => {\n      var username = localStorage.getItem('username');\n      var url = '';\n      fetch(`http://localhost:8000/chat/profile/${username}`).then(res => res.json()).then(res => url = res[0].photo_url);\n      store.dispatch({\n        type: 'IMAGE',\n        data: url\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\nexport default Try;","map":{"version":3,"sources":["E:/Programming/React/For Merging Chat-App/proj/src/Try.js"],"names":["React","Component","createStore","Try","reducer","state","action","type","data","componentWillMount","store","getImage","console","log","getState","username","localStorage","getItem","url","fetch","then","res","json","photo_url","dispatch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA2B,OAA3B;AAQA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAE/BG,OAF+B,GAErB,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAE9B,UAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EACA;AACI,eAAO,KAAKD,MAAL,CAAYE,IAAnB;AACC;;AACL,aAAOH,KAAP;AACH,KAT8B;;AAAA,SAU/BI,kBAV+B,GAUV,MAAM;AAEvB,UAAIC,KAAK,GAAGR,WAAW,CAAC,KAAKE,OAAN,CAAvB,CAFuB,CAGvB;;AACA,WAAKO,QAAL,CAAcD,KAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AAEH,KAjB8B;;AAAA,SAkBjCH,QAlBiC,GAkBrBD,KAAD,IAAW;AACpB,UAAIK,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;AACA,UAAIC,GAAG,GAAC,EAAR;AACAC,MAAAA,KAAK,CAAE,sCAAqCJ,QAAS,EAAhD,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAIH,GAAG,GAAEG,GAAG,CAAC,CAAD,CAAH,CAAOE,SAF3B;AAGAb,MAAAA,KAAK,CAACc,QAAN,CAAe;AAACjB,QAAAA,IAAI,EAAC,OAAN;AAAcC,QAAAA,IAAI,EAACU;AAAnB,OAAf;AAED,KA1BgC;AAAA;;AA4B/BO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAlC8B;AAqCnC,eAAetB,GAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { createStore} from \"redux\";\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\nexport class Try extends Component {\r\n\r\n    reducer = (state = {}, action) => {\r\n        \r\n        if (action.type === 'IMAGE')\r\n        {\r\n            return this.action.data\r\n            }\r\n        return state\r\n    }\r\n    componentWillMount = () => {\r\n     \r\n        var store = createStore(this.reducer)\r\n        // export default store\r\n        this.getImage(store)\r\n        console.log(store.getState())   \r\n\r\n    }\r\n  getImage = (store) => {\r\n    var username = localStorage.getItem('username')\r\n    var url=''\r\n    fetch(`http://localhost:8000/chat/profile/${username}`)\r\n      .then(res => res.json())\r\n      .then(res => url=(res[0].photo_url))\r\n    store.dispatch({type:'IMAGE',data:url})\r\n\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Try"]},"metadata":{},"sourceType":"module"}