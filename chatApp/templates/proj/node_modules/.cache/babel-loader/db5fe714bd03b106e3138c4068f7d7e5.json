{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\For Merging Chat-App\\\\proj\\\\src\\\\containers\\\\Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Hoc from \"../hoc/hoc\";\nimport { createStore } from 'redux';\nimport './../assets/style.css';\nimport * as messageActions from \"./../store/actions/message\";\nimport groupUser from './../assets/groupUser.png';\nimport singleUser from './../assets/singleUser.png';\nimport axios from \"axios\";\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.picFlag = '';\n\n    this.replaceAll = (string, search, replace) => {\n      return string.split(search).join(replace);\n    };\n\n    this.state = {\n      loc: '',\n      value: '',\n      picFlag: ''\n    };\n\n    this.getUserName = () => {\n      var itemNO = this.props.id.split('_').length;\n      var name = this.props.id;\n      name = this.replaceAll(name, '_', ' ');\n      var username = localStorage.getItem('username');\n\n      if (username !== null & username !== undefined) {\n        username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1);\n      }\n\n      name = name.replace(username, '');\n      var temp = this.replaceAll(name, ' ', '');\n\n      if (itemNO > 2) {\n        name += ' [Group]';\n      }\n\n      return name;\n    };\n\n    this.getImageURL = name => {\n      var url = '';\n      var token = localStorage.getItem('token');\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`\n      };\n      axios.get(`http://127.0.0.1:8000/chat/profile/${name}`).then(res => res.data).then(res => {\n        this.setState({\n          value: res[0].photo_url\n        }); // url = res[0].photo_url\n      }).catch();\n      console.log(this.state.value);\n      return this.state.value;\n    };\n\n    this.getImage = () => {\n      var itemNO = this.props.id.split('_').length;\n      var name = this.props.id;\n      name = this.replaceAll(name, '_', ' ');\n      var username = localStorage.getItem('username');\n\n      if (username !== null & username !== undefined) {\n        username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1);\n      }\n\n      if (itemNO <= 2) {\n        name = name.replace(username, '');\n        name = this.replaceAll(name, ' ', '');\n        name = name.toLowerCase();\n        name = this.getImageURL(name);\n      } else {\n        name = groupUser;\n      }\n\n      if (name === undefined) {\n        name = singleUser;\n      }\n\n      return name;\n    };\n  }\n\n  render() {\n    if (this.props.token === null) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, this.props.username !== null ? /*#__PURE__*/React.createElement(Hoc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), this.state.loc, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, this.getUserName()), console.log(this.pic.url), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"social-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-facebook\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-twitter\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-instagram\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }))) : null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token)),\n    getChats: () => {// return window.location.pathname\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["E:/Programming/React/For Merging Chat-App/proj/src/containers/Profile.js"],"names":["React","connect","Redirect","Hoc","createStore","messageActions","groupUser","singleUser","axios","Profile","Component","picFlag","replaceAll","string","search","replace","split","join","state","loc","value","getUserName","itemNO","props","id","length","name","username","localStorage","getItem","undefined","charAt","toUpperCase","slice","temp","getImageURL","url","token","defaults","headers","Authorization","get","then","res","data","setState","photo_url","catch","console","log","getImage","toLowerCase","render","pic","mapStateToProps","auth","chats","message","mapDispatchToProps","dispatch","getUserChats","getChats"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Hoc from \"../hoc/hoc\";\r\nimport { createStore } from 'redux'\r\nimport './../assets/style.css'\r\nimport * as messageActions from \"./../store/actions/message\";\r\nimport groupUser from './../assets/groupUser.png'\r\nimport singleUser from './../assets/singleUser.png'\r\nimport axios from \"axios\";\r\n\r\nclass Profile extends React.Component {\r\n  picFlag=''\r\n  replaceAll=(string, search, replace)=> {\r\n    return string.split(search).join(replace);\r\n  }\r\n\r\n\r\n    \r\n  state = {\r\n    loc: '',\r\n    value: '',\r\n    picFlag:''\r\n  }\r\n\r\n  getUserName = () => {\r\n\r\n    var itemNO = this.props.id.split('_').length\r\n    var name = this.props.id\r\n    name = this.replaceAll(name,'_',' ')\r\n    var username = localStorage.getItem('username')\r\n    if (username !== null & username !== undefined)\r\n    {\r\n      username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1)  \r\n    }\r\n    \r\n      name = name.replace(username, '')\r\n      var temp=this.replaceAll(name,' ','')\r\n      if (itemNO > 2)\r\n      {\r\n        name+=' [Group]'\r\n      }\r\n      return name\r\n  }\r\n \r\n \r\n \r\n  getImageURL = (name) => {\r\n    var url=''\r\n    var token = localStorage.getItem('token')\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/chat/profile/${name}`)\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        this.setState({value:res[0].photo_url})\r\n        // url = res[0].photo_url\r\n      })\r\n      .catch() \r\n \r\n      console.log(this.state.value)\r\n      return this.state.value\r\n    \r\n  }\r\n\r\n\r\n\r\n  getImage = () =>\r\n  {   \r\n    var itemNO = this.props.id.split('_').length\r\n    var name = this.props.id\r\n    name = this.replaceAll(name, '_', ' ')\r\n    var username = localStorage.getItem('username')\r\n    if (username !== null & username !== undefined)\r\n    {\r\n      username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1)  \r\n    }\r\n    if (itemNO <= 2)\r\n    {\r\n      name = name.replace(username, '')\r\n      name = this.replaceAll(name,' ', '')\r\n      name = name.toLowerCase()\r\n      name=this.getImageURL(name) \r\n    }\r\n    else {\r\n      name=groupUser\r\n    }\r\n    if (name === undefined)\r\n    {\r\n      name = singleUser  \r\n    }\r\n    \r\n    return name\r\n  }\r\n  \r\n\r\n \r\n\r\n  render() {\r\n    if (this.props.token === null) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"contact-profile\" >\r\n        \r\n        {this.props.username !== null ? (\r\n          <Hoc>\r\n            \r\n            <img\r\n              src={this.props.url}\r\n            />\r\n            {this.state.loc}\r\n              <p>{this.getUserName()}</p>\r\n             { console.log(this.pic.url)}\r\n              <div className=\"social-media\">\r\n              \r\n              <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\r\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\r\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\r\n            </div>\r\n          </Hoc>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    username: state.auth.username,\r\n    chats: state.message.chats,\r\n    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUserChats: (username, token) =>\r\n      dispatch(messageActions.getUserChats(username, token)),\r\n    getChats: () => {\r\n      \r\n      // return window.location.pathname\r\n    }\r\n    \r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n"]},"metadata":{},"sourceType":"module"}