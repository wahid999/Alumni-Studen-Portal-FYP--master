{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\For Merging Chat-App\\\\proj\\\\src\\\\containers\\\\Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Hoc from \"../hoc/hoc\";\nimport { createStore } from 'redux';\nimport * as messageActions from \"./../store/actions/message\";\nimport './../assets/style.css';\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chat: [],\n      id: null,\n      imgUrl: ''\n    };\n\n    this.replaceAll = (string, search, replace) => {\n      return string.split(search).join(replace);\n    };\n\n    this.getUserName = () => {\n      var itemNO = this.props.id.split('_').length;\n      var name = this.props.id;\n      name = this.replaceAll(name, '_', ' ');\n      var username = localStorage.getItem('username');\n\n      if (username !== null & username !== undefined) {\n        username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1);\n      }\n\n      name = name.replace(username, '');\n\n      if (itemNO > 2) {\n        name += ' [Group]';\n      }\n\n      return name;\n    };\n\n    this.state = {\n      loc: '',\n      value: ''\n    };\n\n    this.getImage = () => {\n      var username = localStorage.getItem('username');\n      fetch(`http://localhost:8000/chat/profile/${username}`).then(res => res.json()).then(res => this.setState({\n        value: res[0].photo_url\n      }));\n    };\n  }\n\n  render() {\n    if (this.props.token === null) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, this.props.username !== null ? /*#__PURE__*/React.createElement(Hoc, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.value,\n      alt: \"not found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), this.getImage(), this.state.loc, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, this.getUserName()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"social-media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-facebook\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-twitter\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-instagram\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }))) : null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserChats: (username, token) => dispatch(messageActions.getUserChats(username, token)),\n    getChats: () => {// return window.location.pathname\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["E:/Programming/React/For Merging Chat-App/proj/src/containers/Profile.js"],"names":["React","connect","Redirect","Hoc","createStore","messageActions","Profile","Component","state","chat","id","imgUrl","replaceAll","string","search","replace","split","join","getUserName","itemNO","props","length","name","username","localStorage","getItem","undefined","charAt","toUpperCase","slice","loc","value","getImage","fetch","then","res","json","setState","photo_url","render","token","mapStateToProps","auth","chats","message","mapDispatchToProps","dispatch","getUserChats","getChats"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Hoc from \"../hoc/hoc\";\r\nimport { createStore } from 'redux'\r\nimport * as messageActions from \"./../store/actions/message\";\r\n\r\nimport './../assets/style.css'\r\n\r\nclass Profile extends React.Component {\r\n   state = {\r\n    \r\n    chat: [],\r\n    id:null,\r\n    imgUrl: '',\r\n    \r\n    \r\n  }  \r\n  replaceAll=(string, search, replace)=> {\r\n    return string.split(search).join(replace);\r\n  }\r\n  getUserName = () => {\r\n    var itemNO = this.props.id.split('_').length\r\n\r\n    var name = this.props.id\r\n    name = this.replaceAll(name,'_',' ')\r\n    var username = localStorage.getItem('username')\r\n    if (username !== null & username !== undefined)\r\n    {\r\n      username = localStorage.getItem('username').charAt(0).toUpperCase() + username.slice(1)  \r\n      }\r\n      name = name.replace(username, '')\r\n   \r\n      if (itemNO > 2)\r\n      {\r\n        name+=' [Group]'\r\n      }\r\n  \r\n     \r\n      return name\r\n  }\r\n\r\n\r\n  state = {\r\n    loc: '',\r\n    value: '',\r\n    \r\n    \r\n  }\r\n  \r\n  \r\n  getImage = () => {\r\n\r\n    var username=localStorage.getItem('username')\r\n    fetch(`http://localhost:8000/chat/profile/${username}`)\r\n    .then(res => res.json())\r\n    .then(res => this.setState( {value:(res[0].photo_url)}))\r\n  }\r\n  \r\n  render() {\r\n    if (this.props.token === null) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"contact-profile\" >\r\n        \r\n        {this.props.username !== null ? (\r\n          <Hoc>\r\n            \r\n            <img src={this.state.value}\r\n\r\n              alt=\"not found\" />\r\n            {this.getImage()}        \r\n            {this.state.loc}\r\n            <p>{this.getUserName()}</p>\r\n            <div className=\"social-media\">\r\n              \r\n              <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\r\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\r\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\r\n            </div>\r\n          </Hoc>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    username: state.auth.username,\r\n    chats: state.message.chats,\r\n    \r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUserChats: (username, token) =>\r\n      dispatch(messageActions.getUserChats(username, token)),\r\n    getChats: () => {\r\n      \r\n      // return window.location.pathname\r\n    }\r\n    \r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n"]},"metadata":{},"sourceType":"module"}