{"ast":null,"code":"// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { BrowserRouter as Router } from \"react-router-dom\";\n// import BaseRouter from \"./routes\";\n// import Sidepanel from \"./containers/Sidepanel\";\n// import Profile from \"./containers/Profile\";\n// import AddChatModal from \"./containers/Popup\";\n// import * as actions from \"./store/actions/auth\";\n// import * as navActions from \"./store/actions/nav\";\n// import * as messageActions from \"./store/actions/message\";\n// import WebSocketInstance from \"./websocket\";\n// class App extends React.Component {\n//   componentDidMount() {\n//     this.props.onTryAutoSignup();\n//   }\n//   constructor(props) {\n//     super(props);\n//     WebSocketInstance.addCallbacks(\n//       this.props.setMessages.bind(this),\n//       this.props.addMessage.bind(this)\n//     );\n//   }\n//   render() {\n//     return (\n//       <Router>\n//         <div id=\"frame\">\n//           <Sidepanel />\n//           <div className=\"content\">\n//             <AddChatModal\n//               isVisible={this.props.showAddChatPopup}\n//               close={() => this.props.closeAddChatPopup()}\n//             />\n//             <BaseRouter />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n// const mapStateToProps = state => {\n//   return {\n//     showAddChatPopup: state.nav.showAddChatPopup,\n//     authenticated: state.auth.token,\n//     chats: state.message.chats,\n//   };\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onTryAutoSignup: () => dispatch(actions.authCheckState()),\n//     closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n//     addMessage: message => dispatch(messageActions.addMessage(message)),\n//     setMessages: messages => dispatch(messageActions.setMessages(messages)),\n//     getUserChats: (username, token) =>\n//       dispatch(messageActions.getUserChats(username, token)),\n//   };\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(App);","map":{"version":3,"sources":["E:/Programming/React/For Merging Chat-App/proj/src/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\n// import { connect } from \"react-redux\";\n// import { BrowserRouter as Router } from \"react-router-dom\";\n// import BaseRouter from \"./routes\";\n// import Sidepanel from \"./containers/Sidepanel\";\n// import Profile from \"./containers/Profile\";\n// import AddChatModal from \"./containers/Popup\";\n// import * as actions from \"./store/actions/auth\";\n// import * as navActions from \"./store/actions/nav\";\n// import * as messageActions from \"./store/actions/message\";\n// import WebSocketInstance from \"./websocket\";\n\n// class App extends React.Component {\n//   componentDidMount() {\n//     this.props.onTryAutoSignup();\n//   }\n\n//   constructor(props) {\n//     super(props);\n//     WebSocketInstance.addCallbacks(\n//       this.props.setMessages.bind(this),\n//       this.props.addMessage.bind(this)\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <Router>\n//         <div id=\"frame\">\n//           <Sidepanel />\n//           <div className=\"content\">\n//             <AddChatModal\n//               isVisible={this.props.showAddChatPopup}\n//               close={() => this.props.closeAddChatPopup()}\n//             />\n\n//             <BaseRouter />\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     showAddChatPopup: state.nav.showAddChatPopup,\n//     authenticated: state.auth.token,\n//     chats: state.message.chats,\n//   };\n// };\n\n\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onTryAutoSignup: () => dispatch(actions.authCheckState()),\n//     closeAddChatPopup: () => dispatch(navActions.closeAddChatPopup()),\n//     addMessage: message => dispatch(messageActions.addMessage(message)),\n//     setMessages: messages => dispatch(messageActions.setMessages(messages)),\n//     getUserChats: (username, token) =>\n//       dispatch(messageActions.getUserChats(username, token)),\n//   };\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(App);\n"]},"metadata":{},"sourceType":"module"}